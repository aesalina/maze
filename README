Проект- Лабиринт с нахождением кратчайшего пути.
Целью проекта было создать лабиринт и найти кратчайший выход из него с помощью алгоритма Дейкстры.

В проекте реализованы следующие шаги:
1)генерация случайного лабиринта.
2)отрисовка его границ с указанием размера, цвета.
3)описание соседних клеток и основного цикла игры.
4)обозначить/найти кратчайший путь из него.

в проекте используем внутренние библиотеки sys, random, а также внешнюю pygame.

Алгоритм Дейкстры — один из наиболее популярных алгоритмов теории графов. Он используется для поиска кратчайшего пути между узлами на ориентированном графе.
Используем мы именно этот алгоритм,поскольку у нас нет отрицательных ребер, он универсален и обладает преимуществом по скорости и мощи выполнения.Применим в области программирования и в сфере маршрутизации.Есть и другие алгоритмы,но их применение и решение с помощью программного кода и таблиц ограничено.

Функция fill_shortest_path вычисляет расстояние «от старта» для каждой клетки, а не только для конечной. Тот же самый код для отслеживания обратного пути до любого узла.Но, если наша приоритетная цель – оптимизация, то мы адаптируем алгоритм так, чтобы он прекращал поиск, как только найдет выход из лабиринта. Также есть алгоритм A*, использующий эвристику, которая позволяет обходиться без сканирования всей карты.

Мы можем представить себе изображение как матрицу пикселей. Каждый пиксель (для простоты) имеет значение RGB 0,0,0 (черный) или 255,255,255 (белый). Наша цель — создать кратчайший путь, который начинается на белом и не переходит на чёрные границы. Чтобы представить эту цель, мы можем рассматривать каждый пиксель как узел и рисовать ребра между соседними пикселями с длиной ребер, основанной на разнице значений RGB.
